// <auto-generated />
using System;
using DbFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbFirst.Migrations
{
    [DbContext(typeof(CarServiceKpzContext))]
    [Migration("20241103122427_test_migration")]
    partial class test_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbFirst.Models.BodyType", b =>
                {
                    b.Property<int>("BodyTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BodyTypeID");

                    b.Property<string>("BodyTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("BodyTypeId")
                        .HasName("PK__BodyType__3F42D9814D081473");

                    b.HasIndex(new[] { "BodyTypeName" }, "UQ__BodyType__BBB9F784C008B655")
                        .IsUnique();

                    b.ToTable("BodyType", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.Car", b =>
                {
                    b.Property<int>("CarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarId"));

                    b.Property<int>("CarModelId")
                        .HasColumnType("int")
                        .HasColumnName("CarModelID");

                    b.Property<int>("ColorId")
                        .HasColumnType("int")
                        .HasColumnName("ColorID");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("ManufactureYear")
                        .HasColumnType("int");

                    b.Property<int?>("Mileage")
                        .HasColumnType("int");

                    b.Property<int?>("Mileage2")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Vin")
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("VIN");

                    b.HasKey("CarId")
                        .HasName("PK__Car__68A0340EEFEBB133");

                    b.HasIndex("CarModelId");

                    b.HasIndex("ColorId");

                    b.HasIndex("CustomerId");

                    b.HasIndex(new[] { "Vin" }, "UQ__Car__C5DF234C06CA70EC")
                        .IsUnique()
                        .HasFilter("[VIN] IS NOT NULL");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.CarBrand", b =>
                {
                    b.Property<int>("CarBrandId")
                        .HasColumnType("int")
                        .HasColumnName("CarBrandID");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("CarBrandId")
                        .HasName("PK__CarBrand__3EAE0B29EB7BA0BA");

                    b.HasIndex(new[] { "BrandName" }, "UQ__CarBrand__2206CE9B8862FDD2")
                        .IsUnique();

                    b.ToTable("CarBrand", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.CarModel", b =>
                {
                    b.Property<int>("CarModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarModelID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarModelId"));

                    b.Property<int?>("BodyTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BodyTypeID");

                    b.Property<int?>("CarBrandId")
                        .HasColumnType("int")
                        .HasColumnName("CarBrandID");

                    b.Property<string>("Dimensions")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)");

                    b.Property<int?>("DriveTypeId")
                        .HasColumnType("int")
                        .HasColumnName("DriveTypeID");

                    b.Property<int?>("EngineTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EngineTypeID");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("SuspensionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SuspensionTypeID");

                    b.Property<int?>("TransmissionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TransmissionTypeID");

                    b.HasKey("CarModelId")
                        .HasName("PK__CarModel__C585C36F89C856B3");

                    b.HasIndex("BodyTypeId");

                    b.HasIndex("CarBrandId");

                    b.HasIndex("DriveTypeId");

                    b.HasIndex("EngineTypeId");

                    b.HasIndex("SuspensionTypeId");

                    b.HasIndex("TransmissionTypeId");

                    b.HasIndex(new[] { "ModelName" }, "UQ__CarModel__67DC63B5820682CD")
                        .IsUnique();

                    b.ToTable("CarModel", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ColorID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.HasKey("ColorId")
                        .HasName("PK__Color__8DA7676D5BE67B6B");

                    b.HasIndex(new[] { "ColorName" }, "UQ__Color__C71A5A7BEC2CD5E9")
                        .IsUnique();

                    b.ToTable("Color", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B831C37328");

                    b.HasIndex(new[] { "Email", "FirstName", "LastName", "PhoneNumber" }, "UQ_Customer_Email_FirstName_LastName_PhoneNumber")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.DriveType", b =>
                {
                    b.Property<int>("DriveTypeId")
                        .HasColumnType("int")
                        .HasColumnName("DriveTypeID");

                    b.Property<string>("DriveTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("DriveTypeId")
                        .HasName("PK__DriveTyp__05D279D71C9A2F32");

                    b.HasIndex(new[] { "DriveTypeName" }, "UQ__DriveTyp__DA639FBC68B9442C")
                        .IsUnique();

                    b.ToTable("DriveType", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("EmployeePositionId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeePositionID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    b.HasKey("EmployeeId")
                        .HasName("PK__Employee__7AD04FF1594F46A3");

                    b.HasIndex("EmployeePositionId");

                    b.HasIndex("StationId");

                    b.HasIndex(new[] { "PhoneNumber", "FirstName", "LastName" }, "UQ_Employee_Phone_First_Last")
                        .IsUnique();

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.EmployeePosition", b =>
                {
                    b.Property<int>("EmployeePositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeePositionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeePositionId"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("EmployeePositionId")
                        .HasName("PK__Employee__6FDE9040257588CD");

                    b.HasIndex(new[] { "PositionName" }, "UQ__Employee__E46AEF426928F72A")
                        .IsUnique();

                    b.ToTable("EmployeePosition", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.EngineType", b =>
                {
                    b.Property<int>("EngineTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EngineTypeID");

                    b.Property<string>("EngineTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EngineTypeId")
                        .HasName("PK__EngineTy__B01776DC7BAAB361");

                    b.HasIndex(new[] { "EngineTypeName" }, "UQ__EngineTy__77F3361CCF50543A")
                        .IsUnique();

                    b.ToTable("EngineType", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.Part", b =>
                {
                    b.Property<int>("PartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartId"));

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Dimensions")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PartBrandId")
                        .HasColumnType("int")
                        .HasColumnName("PartBrandID");

                    b.Property<string>("PartName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PartTypeId")
                        .HasColumnType("int")
                        .HasColumnName("PartTypeID");

                    b.Property<decimal?>("PricePerPackage")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("QuantityPerPackage")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("PartId")
                        .HasName("PK__Part__7C3F0D304C2ABA96");

                    b.HasIndex("PartBrandId");

                    b.HasIndex("PartTypeId");

                    b.ToTable("Part", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.PartBrand", b =>
                {
                    b.Property<int>("PartBrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartBrandID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartBrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PartBrandId")
                        .HasName("PK__PartBran__CAEA6FD94217E82E");

                    b.HasIndex(new[] { "BrandName" }, "UQ__PartBran__2206CE9BCE2C4E96")
                        .IsUnique();

                    b.ToTable("PartBrand", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.PartInStation", b =>
                {
                    b.Property<int>("PartInStationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartInStationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartInStationId"));

                    b.Property<int>("PartId")
                        .HasColumnType("int")
                        .HasColumnName("PartID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    b.HasKey("PartInStationId")
                        .HasName("PK__PartInSt__AE92DE83F804769E");

                    b.HasIndex("PartId");

                    b.HasIndex(new[] { "StationId", "PartId" }, "UQ_PartInStation_StationID_PartID")
                        .IsUnique();

                    b.ToTable("PartInStation", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.PartType", b =>
                {
                    b.Property<int>("PartTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartTypeId"));

                    b.Property<string>("PartTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("PartTypeId")
                        .HasName("PK__PartType__EDE4D59E9D0AACDD");

                    b.HasIndex(new[] { "PartTypeName" }, "UQ__PartType__E8493D2A5FAAFA4C")
                        .IsUnique();

                    b.ToTable("PartType", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.PaymentStatus", b =>
                {
                    b.Property<int>("PaymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentStatusId"));

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.HasKey("PaymentStatusId")
                        .HasName("PK__PaymentS__34F8AC1F2A4157DA");

                    b.HasIndex(new[] { "PaymentName" }, "UQ__PaymentS__FD0AE8EC65DCE085")
                        .IsUnique();

                    b.ToTable("PaymentStatus", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.ProvidedService", b =>
                {
                    b.Property<int>("ProvidedServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProvidedServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProvidedServiceId"));

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<DateTime?>("ProvidedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("VisitServiceId")
                        .HasColumnType("int")
                        .HasColumnName("VisitServiceID");

                    b.HasKey("ProvidedServiceId")
                        .HasName("PK__Provided__F9D5757A238604A9");

                    b.HasIndex("EmployeeId");

                    b.HasIndex(new[] { "VisitServiceId" }, "UQ__Provided__97A666D074CD7968")
                        .IsUnique();

                    b.ToTable("ProvidedService", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.RequiredPart", b =>
                {
                    b.Property<int>("RequiredPartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequiredPartID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequiredPartId"));

                    b.Property<int>("PartInStationId")
                        .HasColumnType("int")
                        .HasColumnName("PartInStationID");

                    b.Property<int>("ProvidedServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ProvidedServiceID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("RequiredPartId")
                        .HasName("PK__Required__6EA5F4741F9920AA");

                    b.HasIndex("PartInStationId");

                    b.HasIndex("ProvidedServiceId");

                    b.ToTable("RequiredPart", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("ServiceTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceTypeID");

                    b.HasKey("ServiceId")
                        .HasName("PK__Service__C51BB0EA8D2E2F36");

                    b.HasIndex("ServiceTypeId");

                    b.HasIndex(new[] { "ServiceName" }, "UQ__Service__A42B5F998B7F98C7")
                        .IsUnique();

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.ServiceType", b =>
                {
                    b.Property<int>("ServiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceTypeId"));

                    b.Property<string>("ServiceTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ServiceTypeId")
                        .HasName("PK__ServiceT__8ADFAA0CFCC5D982");

                    b.HasIndex(new[] { "ServiceTypeName" }, "UQ__ServiceT__64009631F9572DD7")
                        .IsUnique();

                    b.ToTable("ServiceType", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("StationId")
                        .HasName("PK__Station__E0D8A6DD8BBA4695");

                    b.HasIndex(new[] { "Address", "PhoneNumber" }, "UQ_Station_Address_PhoneNumber")
                        .IsUnique();

                    b.ToTable("Station", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.SuspensionType", b =>
                {
                    b.Property<int>("SuspensionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SuspensionTypeID");

                    b.Property<string>("SuspensionTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("SuspensionTypeId")
                        .HasName("PK__Suspensi__BAEC7EB6E399CA1E");

                    b.HasIndex(new[] { "SuspensionTypeName" }, "UQ__Suspensi__FCE0AEBAC72FC51E")
                        .IsUnique();

                    b.ToTable("SuspensionType", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.TransmissionType", b =>
                {
                    b.Property<int>("TransmissionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TransmissionTypeID");

                    b.Property<string>("TransmissionTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TransmissionTypeId")
                        .HasName("PK__Transmis__B976249686CDD672");

                    b.HasIndex(new[] { "TransmissionTypeName" }, "UQ__Transmis__5AAFD6770C3A2CA8")
                        .IsUnique();

                    b.ToTable("TransmissionType", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.Visit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitId"));

                    b.Property<DateTime?>("ActualEndDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("CarID");

                    b.Property<string>("Details")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PaymentStatusId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentStatusID");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("VisitDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("VisitNumber")
                        .HasColumnType("int");

                    b.Property<int>("VisitStatusId")
                        .HasColumnType("int")
                        .HasColumnName("VisitStatusID");

                    b.HasKey("VisitId")
                        .HasName("PK__Visit__4D3AA1BEAD2DA5A7");

                    b.HasIndex("CarId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("VisitStatusId");

                    b.ToTable("Visit", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.VisitService", b =>
                {
                    b.Property<int>("VisitServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitServiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitServiceId"));

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnName("VisitID");

                    b.HasKey("VisitServiceId")
                        .HasName("PK__VisitSer__97A666D19029D2CB");

                    b.HasIndex("ServiceId");

                    b.HasIndex("VisitId");

                    b.ToTable("VisitService", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.VisitStatus", b =>
                {
                    b.Property<int>("VisitStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitStatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.HasKey("VisitStatusId")
                        .HasName("PK__VisitSta__8013A2F3B34EF93A");

                    b.HasIndex(new[] { "StatusName" }, "UQ__VisitSta__05E7698A007B09C0")
                        .IsUnique();

                    b.ToTable("VisitStatus", (string)null);
                });

            modelBuilder.Entity("DbFirst.Models.Car", b =>
                {
                    b.HasOne("DbFirst.Models.CarModel", "CarModel")
                        .WithMany("Cars")
                        .HasForeignKey("CarModelId")
                        .IsRequired()
                        .HasConstraintName("FK__Car__CarModelID__6C190EBB");

                    b.HasOne("DbFirst.Models.Color", "Color")
                        .WithMany("Cars")
                        .HasForeignKey("ColorId")
                        .IsRequired()
                        .HasConstraintName("FK__Car__ColorID__6D0D32F4");

                    b.HasOne("DbFirst.Models.Customer", "Customer")
                        .WithMany("Cars")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK__Car__CustomerID__6B24EA82");

                    b.Navigation("CarModel");

                    b.Navigation("Color");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DbFirst.Models.CarModel", b =>
                {
                    b.HasOne("DbFirst.Models.BodyType", "BodyType")
                        .WithMany("CarModels")
                        .HasForeignKey("BodyTypeId")
                        .HasConstraintName("FK__CarModel__BodyTy__60A75C0F");

                    b.HasOne("DbFirst.Models.CarBrand", "CarBrand")
                        .WithMany("CarModels")
                        .HasForeignKey("CarBrandId")
                        .HasConstraintName("FK__CarModel__CarBra__5CD6CB2B");

                    b.HasOne("DbFirst.Models.DriveType", "DriveType")
                        .WithMany("CarModels")
                        .HasForeignKey("DriveTypeId")
                        .HasConstraintName("FK__CarModel__DriveT__5BE2A6F2");

                    b.HasOne("DbFirst.Models.EngineType", "EngineType")
                        .WithMany("CarModels")
                        .HasForeignKey("EngineTypeId")
                        .HasConstraintName("FK__CarModel__Engine__5FB337D6");

                    b.HasOne("DbFirst.Models.SuspensionType", "SuspensionType")
                        .WithMany("CarModels")
                        .HasForeignKey("SuspensionTypeId")
                        .HasConstraintName("FK__CarModel__Suspen__5DCAEF64");

                    b.HasOne("DbFirst.Models.TransmissionType", "TransmissionType")
                        .WithMany("CarModels")
                        .HasForeignKey("TransmissionTypeId")
                        .HasConstraintName("FK__CarModel__Transm__5EBF139D");

                    b.Navigation("BodyType");

                    b.Navigation("CarBrand");

                    b.Navigation("DriveType");

                    b.Navigation("EngineType");

                    b.Navigation("SuspensionType");

                    b.Navigation("TransmissionType");
                });

            modelBuilder.Entity("DbFirst.Models.Employee", b =>
                {
                    b.HasOne("DbFirst.Models.EmployeePosition", "EmployeePosition")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeePositionId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Employee__Employ__08B54D69");

                    b.HasOne("DbFirst.Models.Station", "Station")
                        .WithMany("Employees")
                        .HasForeignKey("StationId")
                        .IsRequired()
                        .HasConstraintName("FK__Employee__Statio__09A971A2");

                    b.Navigation("EmployeePosition");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("DbFirst.Models.Part", b =>
                {
                    b.HasOne("DbFirst.Models.PartBrand", "PartBrand")
                        .WithMany("Parts")
                        .HasForeignKey("PartBrandId")
                        .HasConstraintName("FK__Part__PartBrandI__787EE5A0");

                    b.HasOne("DbFirst.Models.PartType", "PartType")
                        .WithMany("Parts")
                        .HasForeignKey("PartTypeId")
                        .HasConstraintName("FK__Part__PartTypeID__797309D9");

                    b.Navigation("PartBrand");

                    b.Navigation("PartType");
                });

            modelBuilder.Entity("DbFirst.Models.PartInStation", b =>
                {
                    b.HasOne("DbFirst.Models.Part", "Part")
                        .WithMany("PartInStations")
                        .HasForeignKey("PartId")
                        .IsRequired()
                        .HasConstraintName("FK__PartInSta__PartI__02084FDA");

                    b.HasOne("DbFirst.Models.Station", "Station")
                        .WithMany("PartInStations")
                        .HasForeignKey("StationId")
                        .IsRequired()
                        .HasConstraintName("FK__PartInSta__Stati__01142BA1");

                    b.Navigation("Part");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("DbFirst.Models.ProvidedService", b =>
                {
                    b.HasOne("DbFirst.Models.Employee", "Employee")
                        .WithMany("ProvidedServices")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK__ProvidedS__Emplo__2645B050");

                    b.HasOne("DbFirst.Models.VisitService", "VisitService")
                        .WithOne("ProvidedService")
                        .HasForeignKey("DbFirst.Models.ProvidedService", "VisitServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProvidedS__Visit__2739D489");

                    b.Navigation("Employee");

                    b.Navigation("VisitService");
                });

            modelBuilder.Entity("DbFirst.Models.RequiredPart", b =>
                {
                    b.HasOne("DbFirst.Models.PartInStation", "PartInStation")
                        .WithMany("RequiredParts")
                        .HasForeignKey("PartInStationId")
                        .IsRequired()
                        .HasConstraintName("FK__RequiredP__PartI__2A164134");

                    b.HasOne("DbFirst.Models.ProvidedService", "ProvidedService")
                        .WithMany("RequiredParts")
                        .HasForeignKey("ProvidedServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__RequiredP__Provi__2B0A656D");

                    b.Navigation("PartInStation");

                    b.Navigation("ProvidedService");
                });

            modelBuilder.Entity("DbFirst.Models.Service", b =>
                {
                    b.HasOne("DbFirst.Models.ServiceType", "ServiceType")
                        .WithMany("Services")
                        .HasForeignKey("ServiceTypeId")
                        .HasConstraintName("FK__Service__Service__114A936A");

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("DbFirst.Models.Visit", b =>
                {
                    b.HasOne("DbFirst.Models.Car", "Car")
                        .WithMany("Visits")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Visit__CarID__1CBC4616");

                    b.HasOne("DbFirst.Models.Employee", "Employee")
                        .WithMany("Visits")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK__Visit__EmployeeI__1DB06A4F");

                    b.HasOne("DbFirst.Models.PaymentStatus", "PaymentStatus")
                        .WithMany("Visits")
                        .HasForeignKey("PaymentStatusId")
                        .HasConstraintName("FK__Visit__PaymentSt__1EA48E88");

                    b.HasOne("DbFirst.Models.VisitStatus", "VisitStatus")
                        .WithMany("Visits")
                        .HasForeignKey("VisitStatusId")
                        .IsRequired()
                        .HasConstraintName("FK__Visit__VisitStat__1BC821DD");

                    b.Navigation("Car");

                    b.Navigation("Employee");

                    b.Navigation("PaymentStatus");

                    b.Navigation("VisitStatus");
                });

            modelBuilder.Entity("DbFirst.Models.VisitService", b =>
                {
                    b.HasOne("DbFirst.Models.Service", "Service")
                        .WithMany("VisitServices")
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("FK__VisitServ__Servi__22751F6C");

                    b.HasOne("DbFirst.Models.Visit", "Visit")
                        .WithMany("VisitServices")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__VisitServ__Visit__2180FB33");

                    b.Navigation("Service");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("DbFirst.Models.BodyType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("DbFirst.Models.Car", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("DbFirst.Models.CarBrand", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("DbFirst.Models.CarModel", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("DbFirst.Models.Color", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("DbFirst.Models.Customer", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("DbFirst.Models.DriveType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("DbFirst.Models.Employee", b =>
                {
                    b.Navigation("ProvidedServices");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("DbFirst.Models.EmployeePosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("DbFirst.Models.EngineType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("DbFirst.Models.Part", b =>
                {
                    b.Navigation("PartInStations");
                });

            modelBuilder.Entity("DbFirst.Models.PartBrand", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("DbFirst.Models.PartInStation", b =>
                {
                    b.Navigation("RequiredParts");
                });

            modelBuilder.Entity("DbFirst.Models.PartType", b =>
                {
                    b.Navigation("Parts");
                });

            modelBuilder.Entity("DbFirst.Models.PaymentStatus", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("DbFirst.Models.ProvidedService", b =>
                {
                    b.Navigation("RequiredParts");
                });

            modelBuilder.Entity("DbFirst.Models.Service", b =>
                {
                    b.Navigation("VisitServices");
                });

            modelBuilder.Entity("DbFirst.Models.ServiceType", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("DbFirst.Models.Station", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("PartInStations");
                });

            modelBuilder.Entity("DbFirst.Models.SuspensionType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("DbFirst.Models.TransmissionType", b =>
                {
                    b.Navigation("CarModels");
                });

            modelBuilder.Entity("DbFirst.Models.Visit", b =>
                {
                    b.Navigation("VisitServices");
                });

            modelBuilder.Entity("DbFirst.Models.VisitService", b =>
                {
                    b.Navigation("ProvidedService");
                });

            modelBuilder.Entity("DbFirst.Models.VisitStatus", b =>
                {
                    b.Navigation("Visits");
                });
#pragma warning restore 612, 618
        }
    }
}
